{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Paypal","action","method","target","className","htmlFor","this","props","price","type","name","value","paypalButtonId","src","border","alt","width","height","Component","Headery","state","categories","id","url","map","category","key","toUpperCase","selected","href","Home","NoMatch","ProductPage","match","productId","location","params","products","data","filter","product","description","para","i","p","centered","infinite","stopAutoPlayOnHover","arrows","dots","slidesPerPage","autoPlay","animationSpeed","breakpoints","1250","slidesPerScroll","750","images","image","imageurl","CategoryPage","AllProductsPage","App","basename","path","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.26622a7b.chunk.js","sourcesContent":["import React, {Component}  from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport data from \"./data\";\nimport './App.css';\n\nfunction App() {\n  return (\n  <Router basename='/'>\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/product/:productId\" component={ProductPage} />\n        <Route path=\"/category/:category\" component={CategoryPage} />\n\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n\n            <footer>\n            <div className=\"bottom\">\n              <div className=\"left\">&copy; Bicycle Service Centre</div>\n              <div className=\"right\"><img src=\"https://www.paypalobjects.com/webstatic/mktg/Logo/AM_mc_vs_ms_ae_UK.png\" className=\"responsive-md right\" border=\"0\" alt=\"PayPal Acceptance Mark\" /></div>\n            </div>\n            </footer>\n    </div>\n  </Router>\n  );\n}\n\nclass Paypal extends Component {\n  render() {\n    return (\n      <div>\n        <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_top\">\n          <label className=\"price\" htmlFor=\"submit\">&pound;{this.props.price} &amp; <strong>FREE</strong> UK Delivery &nbsp;</label>\n          <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n          <input type=\"hidden\" name=\"hosted_button_id\" value={this.props.paypalButtonId} />\n          <input type=\"image\" src=\"https://www.paypalobjects.com/en_GB/i/btn/btn_buynow_LG.gif\" border=\"0\" name=\"submit\" alt=\"PayPal â€“ The safer, easier way to pay online!\" />\n          <img alt=\"\" border=\"0\" src=\"https://www.paypalobjects.com/en_GB/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n        </form>\n      </div>\n    );\n  }\n}\n\n//TODO: set class = active if this.props.selected matches category\nclass Headery extends Component {\n  constructor(props) {\n        super(props);\n        this.state = {\n            categories: [\n                {id: 1, name: 'Tools', url: '/#/category/tools'},\n                {id: 2, name: 'Bearings', url: '/#/category/bearings'},\n                {id: 3, name: 'Thule', url: '/#/category/thule'},\n            ]\n        };\n  }\n\n  render() {\n    return (\n        <div className=\"header-right\">\n          {this.state.categories.map((category, key) =>\n            <a className={category.name.toUpperCase() === this.props.selected.toUpperCase() ? 'active' : null} href={category.url} key={category.id}>{category.name}</a>\n          )}\n        </div>\n    );\n  }\n}\n\nfunction Home() {\n  return <AllProductsPage/>;\n}\n\nfunction NoMatch() {\n  return <h2>404</h2>;\n}\n\n//TODO: check for undefined\nconst ProductPage = ({ match, location }) => {\n  const { params: { productId } } = match;\n\n  var products = data.products.filter( function (product) {\n            return product.id === productId\n          });\n\n  return (\n    <>\n        <div className=\"header\">\n          <div><a href=\"/\" className=\"logo\"><img className=\"responsive-sm\" src=\"/images/bsc-logo-border.png\" alt=\"Bicycle Service Centre Logo\"/>Bicycle Service Centre</a></div>\n          <div className=\"clear\"/>\n          <Headery selected={products[0].category} />\n        </div>\n      <div className=\"product\">\n        <h1>{products[0].name}</h1>\n        <Paypal price={products[0].price} paypalButtonId={products[0].paypalButtonId} />\n        <h2>Description</h2>\n                        {\n        \t\t\t\t\tproducts[0].description.map((para, i) => {\n        \t\t\t\t\t\treturn (\n                                        <p key={i}>{para.p}</p>\n        \t\t\t\t\t\t);\n        \t\t\t\t\t})\n        \t\t\t\t}\n        <div>\n<Carousel\n  centered\n  infinite\n  stopAutoPlayOnHover\n  arrows\n  dots\n  slidesPerPage={2}\n  autoPlay={3000}\n  animationSpeed={1000}\n  breakpoints={{\n          1250: { // these props will be applied when screen width is less than 1000px\n            slidesPerPage: 1,\n            slidesPerScroll: 1,\n            centered: false,\n          },\n          750: { // these props will be applied when screen width is less than 501px\n            slidesPerPage: 1,\n            slidesPerScroll: 1,\n            centered: false,\n          },\n        }}\n>\n                {\n\t\t\t\t\tproducts[0].images.map((image, i) => {\n\t\t\t\t\t\treturn (\n                                <img className=\"responsive\" key={i} height=\"400\" src={image.imageurl} alt={products[0].name} />\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n</Carousel>\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nconst CategoryPage = ({ match, location }) => {\n  const { params: { category } } = match;\n\n  var products = data.products.filter( function (product) {\n            return product.category.toUpperCase() === category.toUpperCase()\n          });\n\n  return (\n    <>\n                   <div className=\"header\">\n                     <div><a href=\"/\" className=\"logo\"><img className=\"responsive-sm\" src=\"/images/bsc-logo-border.png\" alt=\"Bicycle Service Centre Logo\"/>Bicycle Service Centre</a></div>\n                     <div className=\"clear\" />\n                     <Headery selected={category} />\n                   </div>\n                <div className=\"product\">\n                  <h1 className=\"capitalize\">{category}</h1>\n                    {\n    \t\t\t\t\tproducts.map((product, i) => {\n    \t\t\t\t\t\treturn (\n    \t\t\t\t\t\t<div className=\"parent\">\n                                <div key={i} className=\"left\">\n                                    <img key={i} width=\"200\" src={product.images[0].imageurl} className=\"xresponsive\" alt={product.name} />\n                                </div>\n                                <div className=\"left\">\n                                    <a href={\"/#/product/\" + product.id}>{product.name}</a>\n                                </div>\n                                <div className=\"left\">\n                                    <a href={\"/#/product/\" + product.id}>&pound;{product.price}</a>\n                                </div>\n                                <div className=\"clear\" />\n                            </div>\n    \t\t\t\t\t\t);\n    \t\t\t\t\t})\n    \t\t\t\t}\n                </div>\n            </>\n  );\n};\n\nclass AllProductsPage extends Component {\n  render() {\n    return (\n    <>\n                   <div className=\"header\">\n                     <div><a href=\"/\" className=\"logo\"><img className=\"responsive-sm\" src=\"/images/bsc-logo-border.png\" alt=\"Bicycle Service Centre Logo\"/>Bicycle Service Centre</a></div>\n                     <div className=\"clear\" />\n                     <Headery selected=\"\" />\n                   </div>\n                <div className=\"product\">\n                  <h1 className=\"capitalize\">All Products</h1>\n                    {\n    \t\t\t\t\tdata.products.map((product, i) => {\n    \t\t\t\t\t\treturn (\n    \t\t\t\t\t\t<div className=\"parent\">\n                                <div key={i} className=\"left\">\n                                    <img key={i} width=\"200\" src={product.images[0].imageurl} className=\"xresponsive\" alt={product.name} />\n                                </div>\n                                <div className=\"left\">\n                                    <a href={\"/#/product/\" + product.id}>{product.name}</a>\n                                </div>\n                                <div className=\"left\">\n                                    <a href={\"/#/product/\" + product.id}>&pound;{product.price}</a>\n                                </div>\n                                <div className=\"clear\" />\n                            </div>\n    \t\t\t\t\t\t);\n    \t\t\t\t\t})\n    \t\t\t\t}\n                </div>\n            </>\n  );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}